{
  "realm": "modelix",
  "enabled": true,
  "clients": [
    {
      "clientId": "oauth2-proxy",
      "secret": "8g!.4RpL2tPxdXMMK6mb",
      "enabled": true,
      "directAccessGrantsEnabled": false,
      "publicClient": false,
      "defaultClientScopes": ["sync", "email"],
      "redirectUris": [
        "http://localhost:4180/oauth2/callback"
      ],
      "protocolMappers": [
        {
          "name": "aud-mapper-oauth2-proxy",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "oauth2-proxy",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "introspection.token.claim": "true"
          }
        }
      ]
    },
    {
      "clientId": "modelix-sync-plugin",
      "enabled": true,
      "directAccessGrantsEnabled": false,
      "publicClient": true,
      "defaultClientScopes": ["sync"],
      "redirectUris": [
        "*"
      ]
    }
  ],
  "clientScopes": [
    {
      "name": "sync",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "gui.order": "",
        "consent.screen.text": "Read and write access for model synchronization"
      },
      "protocolMappers": [
        {
          "name": "sync-permissions-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "claim.value": "[\"model-server/admin\"]",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "permissions",
            "jsonType.label": "JSON",
            "access.tokenResponse.claim": "false"
          }
        }
      ]
    },
    {
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "users": [
    {
      "username": "user1",
      "email": "user1@example.com",
      "firstName": "authorization-test-user",
      "lastName": "authorization-test-user",
      "enabled": true,
      "credentials": [
        {
          "type": "password",
          "value": "abc"
        }
      ]
    }
  ],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "name": "rsa-256-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "keySize": [
            "2048"
          ],
          "active": [
            "true"
          ],
          "priority": [
            "100"
          ],
          "enabled": [
            "true"
          ],
          "algorithm": [
            "RS256"
          ]
        }
      },
      {
        "name": "rsa-512-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "keySize": [
            "2048"
          ],
          "active": [
            "true"
          ],
          "priority": [
            "0"
          ],
          "enabled": [
            "true"
          ],
          "algorithm": [
            "RS512"
          ]
        }
      }
    ]
  }
}
